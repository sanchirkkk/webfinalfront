import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home1.module.css'
import Router, { withRouter } from 'next/router'
import { User, Dropdown, Button, Table, Modal, Text, Row, Input, useAsyncList } from "@nextui-org/react";
import Cookie from "js-cookie"
import React, { useState, useEffect } from 'react';
import DatePicker from "react-datepicker";
import "react-datepicker/dist/react-datepicker.css";
import axios from 'axios';
import { Doughnut,Line,Radar } from 'react-chartjs-2';
import 'chart.js/auto';
import Incomes from '../components/income.js'
import WidthDraw from '../components/withdraw.js'
import Cpmp from '../components/comp.js'
// import { type } from '@amcharts/amcharts5';

// export async function getServerSideProps(context) {
//   const res = await Cookie.get("Token")

//   console.log(res)
//     return {
//       props: {id:res}, // will be passed to the page component as props
//     }



// }
export default function Home() {

  const [scrollY, setScrollY] = useState(0);
  
  // const [Dou,setDuo] = useState({})
  let env = 'http://localhost:5001/'
  let menus = ["Орлого","Зарлага","Харьцуулалт"]
  const [menu,setMenu] = useState(menus)
  const [incomeCheck,setIncomecheck] = useState(true)
  const [withdDraw,withdDrawcheck] = useState(false)
  const [comprise,comprisecheck] = useState(false)
  const [uData, setUdata] = useState({})
  const a = Cookie.get("Token")
  const [dataCheck,setDataCheck] = useState(false)
  const getdata = () => {

    axios.get(env + 'userinfo?userid=' + a)
        .then((res) => {
          setUdata(res.data)
          setDataCheck(true)

        }).catch((err) => {
            console.log(err)
            
        })

}

useEffect(() => {
  getdata()

}, [])
  function routerpush() {
    Cookie.remove("Token")
    Router.push({

      pathname: '/'
    })
    console.log("clicked")

  }
  function clickButton(item){
    if( item.target.name == "Орлого"){
      setIncomecheck(true)
      withdDrawcheck(false)
      comprisecheck(false)
    } else if( item.target.name == "Зарлага"){
      setIncomecheck(false)
      withdDrawcheck(true)
      comprisecheck(false)
    } else if(item.target.name == "Харьцуулалт"){
      setIncomecheck(false)
      withdDrawcheck(false)
      comprisecheck(true)
    }

  } 
  
  useEffect(() => {
    const handleResize = () => {
      setScrollY(window.innerWidth,);
    };
    window.addEventListener("resize", handleResize);
    return () => {
        window.removeEventListener("resize", handleResize)
    };
  }, []);


  

  const stylesq ={
    1:{color:"White",backgroundColor:"rgba(255, 255, 255, 0.1)"},
    2:{width:"10px",color:"White",backgroundColor:"rgba(255, 255, 255, 0.1)"}}

  return (
    <div className={styles.container}>



      <Head>
        <title>DASHBOARD</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>


        <div className={styles.header}>

          <div className={styles.usercontent}>
            {menu.map((item,index)=>{
              return(<Button onPress={clickButton} name={item}  size={scrollY < 400? "xs":"md"}  css={{color:"White",backgroundColor:"rgba(255, 255, 255, 0.1)"}} key={index}>{item}</Button>)
            })}
          </div>
         { dataCheck&&<div className={styles.usercontent1}> 
          <User bordered
            // src="https://i.pravatar.cc/150?u=a042581f4e29026704d"
            name={uData['first_name'] + ' '+ uData['last_name'][0]}
            color='primary'
            description={"@" +uData['last_name']}
          >

          </User>
            <Button onPress={routerpush} css={{ color: "rgb(252, 213, 53)" }} size="xs" light>
              OUT
            </Button>

          </div>}
        </div>
        <div className={styles.dashboardCon}>
       {incomeCheck&& <Incomes/>}
       {withdDraw&& <WidthDraw/>}
       {comprise&& <Cpmp/>}
        </div>
   
      </main>

    </div>
  )
}
